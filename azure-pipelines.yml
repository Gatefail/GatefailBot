# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- feature/*

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Docker@2
  displayName: Build
  inputs:
    containerRegistry: 'Docker Hub'
    repository: '$(RepoName)'
    command: 'build'
    Dockerfile: '**/Dockerfile'
- task: Docker@2
  displayName: Push
  condition: and(succeeded(), eq(variables['Build.SourceBranch', 'refs/heads/master']))
  inputs:
    containerRegistry: 'Docker Hub'
    repository: '$(RepoName)'
    command: 'push'
- task: SSH@0
  displayName: Deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch', 'refs/heads/master']))
  inputs:
    sshEndpoint: 'Droplet'
    runOptions: 'inline'
    inline: |
      for id in $(docker ps -a -q --filter name=gatefail-bot); do docker stop $id && docker rm $id; done
      docker run --name gatefail-bot \
      -e DiscordToken=$(token) \
      -e ConnectionStrings:BotDb="Host=$(dbhost);Database=$(dbname);Username=$(dbuser);Password=$(dbpassword)" \
      -e ASPNETCORE_ENVIRONMENT=production \
      -d gatefail/gatefail-bot:$(Build.BuildId)
    failOnStdErr: true
